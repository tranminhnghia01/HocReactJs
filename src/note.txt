
      <Row gutter={[8, 8]}>
        {/* Input Name */}
        <Col span="6">
          <Input
            type="text"
            value={name}
            placeholder="T√™n :"
            onChange={(e) => {
              handleChangeName(e);
            }}
          />
        </Col>

        {/* Input Job */}

        <Col span="6">
          <Input
            type="text"
            value={job}
            placeholder="Th√™m vi·ªác c·∫ßn l√†m..."
            onChange={(e) => {
              handleChangeInput(e);
            }}
          />
        </Col>

        {/* Input Date Time */}
        <Col span="6">
          <Input
            type="datetime-local"
            value={dateTime}
            onChange={(e) => setDateTime(e.target.value)}
          />
        </Col>

        {/* Input select Option */}

        <Col span="6">
          <Select
            style={{ width: "50%" }}
            value={category}
            defaultValue={"study"}
            onChange={(value) => setCategory(value)}
            options={[
              { value: "study", label: "H·ªçc t·∫≠p" },
              { value: "word", label: "C√¥ng vi·ªác" },
              { value: "other", label: "Kh√°c" },
            ]}
          />
        </Col>

        <Col span="6">
          <Input
            type="text"
            value={note}
            placeholder="Th√™m ghi ch√∫..."
            onChange={(e) => setNote(e.target.value)}
          />
        </Col>
      </Row>
      <Row gutter={[8, 8]} style={{ marginTop: "8px" }}>
        <Col span="6">
          <Button
            color="primary"
            variant="solid"
            style={{ width: "30%", marginRight: "10px" }}
            onClick={handleSubmit}
          >
            {Edit.isEdit ? "C·∫≠p nh·∫≠t" : "Th√™m"}
          </Button>
          <Button
            color="danger"
            variant="solid"
            style={{ width: "30%" }}
            onClick={() => handleDeleteAll()}
          >
            ‚ùå X√≥a h·∫øt
          </Button>
        </Col>
      </Row>

      <Divider orientation="left">Danh s√°ch</Divider>
      <List
        // header={<div>Header</div>}
        // footer={<div>Footer</div>}
        bordered
        dataSource={todos
          .slice()
          .sort((a, b) => new Date(a.dateTime) - new Date(b.dateTime))}
        renderItem={(item) => (
          <List.Item key={item.id}>
            <Space style={{ justifyContent: "space-between", width: "100%" }}>
              <Title level={4}> üë§ H·ªç t√™n: {item.name} </Title>

              <Text>Ngh·ªÅ nghi·ªáp :{item.job}</Text>
              <Text>Ghi ch√∫ v·ªÅ :{item.category || "Tr·ªëng"}</Text>
              <Text>N·ªôi dung :{item.note || "Kh√¥ng c√≥ ghi ch√∫"}</Text>
              <Text type="secondary">
                üìÖ
                {item.dateTime
                  ? new Date(item.dateTime).toLocaleString()
                  : "Tr·ªëng"}
              </Text>
            </Space>
            <Button
              color="pink"
              variant="outline"
              onClick={() => handleEditTodo(item.id)}
            >
              ‚úèÔ∏è S·ª≠a
            </Button>
            <Button danger onClick={() => handleDelete(item.id)}>
              ‚ùå X√≥a
            </Button>
          </List.Item>
        )}
      />